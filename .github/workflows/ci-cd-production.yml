name: Continous Integration Production

on:
  push:
    branches:
      - master

jobs:
  run-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get the current branch name
        id: branch_ref
        shell: bash
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache-test-${{ steps.branch_ref.outputs.branch }}
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build test image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/development/Dockerfile
          tags: mem-opt-crd_web:latest
          builder: ${{ steps.buildx.outputs.name }}
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache-test-${{ steps.branch_ref.outputs.branch }}
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Run RSPEC tests
        run: docker-compose -f docker-compose.test.yml run --rm web
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache-test-${{ steps.branch_ref.outputs.branch }}
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache-test-${{ steps.branch_ref.outputs.branch }}


  build-image:
    name: Build Image & Push to AWS ECR
    runs-on: buildjet-8vcpu-ubuntu-2204
    needs: run-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache-prod
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Configure Docker meta tags
        id: docker-meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/mem-opt
          tags: |
            production
            type=sha
            type=semver,pattern={{raw}}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/production/Dockerfile
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache-prod
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache-prod
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache-prod
